#!bin/bash
clear
#Colors
bk="$(printf '\033[0;30m')"
r="$(printf '\033[0;31m')"
g="$(printf '\033[0;32m')"
b="$(printf '\033[0;33m')"
o="$(printf '\033[0;33m')"
b="$(printf '\033[0;34m')"
p="$(printf '\033[0;35m')"
c="$(printf '\033[0;36m')"
lg="$(printf '\033[0;37m')"
dg="$(printf '\033[1;30m')"
lr="$(printf '\033[1;31m')"
lgr="$(printf '\033[1;32m')"
y="$(printf '\033[1;33m')"
lb="$(printf '\033[1;34m')"
lp="$(printf '\033[1;35m')"
lc="$(printf '\033[1;36m')"
w="$(printf '\033[1;37m')"
nc="$(printf '\033[0m')"
#creator
creator="Ahmad Ali Dogar"
#Banner
const() {
echo "${r}NOTE !${w}"
echo "this portion in currently under construction"
echo "${r}you're not allowed here${w}"
echo "${lr}Bye Bye"
exit 0
}
#line 32
banner() {
cat <<- EOF
      ${c}   _______ _________ _______
      ${c}  (  ____ \\\__   __/(  ____ )
      ${c}  | (    \/   ) (   | (    )|
      ${c}  | (_____    | |   | (____)|
      ${c}  (_____  )   | |   |     __)
      ${c}        ) |   | |   | (\ (
      ${c}  /\____) |   | |   | ) \ \__
      ${c}  \_______)   )_(   |/   \__/${w}
                                ${w}By ${lgr}${creator}${w}
EOF
}
banner_sm() {
printf "$lgr"
figlet -f 4Max STR
}
#line 46
line() {
printf ${lc}'%.sâ”€' $(seq 1 $(tput cols))
}
#Sxripts
#main menu
w_mass() {
printf "${lr}The total mass cannot be more than 1 KG (1000 grams)${w}"
sleep 3
}
w_opt() {
echo "${lr}Only choose from the given optiona${w}"
}
login() {
printf "${lgr}"
figlet -f 4Max Login
line
echo
echo
read -p "${lp}(${lr}--${lp}) ${w}Username: ${y}" usrn
echo
read -p "${lp}(${lr}--${lp}) ${w}Password: ${y}" -s usrp
echo
echo "Usrname - $usrn"
echo "passwrd - $usrp"
lgin="0"
case $usrn in
Elementalz | Zuko)
lgin=$(( $lgin + 1 ));;
*)
echo; echo "${lr}Invalid Username";;
esac
case $usrp in
dogar333890 | pass123)
lgin=$(( $lgin + 1 ));;
*)
echo "${lr}Wrong Password entered${w}";;
esac
echo
if [ $lgin = 2 ]; then echo "${lgr}Login Successful"; echo; echo "${w}Welcome ${lgr}$usrn${w}"; sleep 3;clear; banner; main_menu; else sleep 3; clear; login; fi
echo
}
# line 58
invoice() {
banner_sm
line
echo "---------------------"
echo "Costumer Information"
echo "---------------------"
echo "${w}First name     : ${lc}$custfn"
echo "${w}Last name      : ${lc}$custln"
echo "${w}Phone Number   : ${lc}$custph"
echo "${w}Address        : ${lc}$custaddr"
echo "${w}Receptionist   : ${lc}$recemp"
echo
echo
echo
echo "${w}Purchase Details"
echo "${o}-------------------"
echo " ${lb}Name ${w}| ${lb}Weight ${w}| ${lb}Price ${w}| ${lb}Total ${w}|"
echo " Gold    ${agold}g      ${gold}$     ${lgr}${tgold}$ ${w}|"
echo " Iron    ${airon}g       ${iron}$     ${lgr}${tiron}$ ${w}|"
echo "--------------------------------"
echo "${w}Total Billed   :         ${lgr}$total$"
echo
echo
line
echo "${w}rules and other things here"
}
invd() {
read -p "${lgr}[${lp}1${lgr}]${w}Please enter your First Name: ${y}" custfn
read -p "${lgr}[${lp}2${lgr}]${w}Please enter your Last Name: ${y}" custln
read -p "${lgr}[${lp}3${lgr}]${w}Please enter your Address: ${y}" custaddr
read -p "${lgr}[${lp}4${lgr}]${w}Please enter your Phone: ${y}" custph
recemp="Ahmad Ali"
clear
banner_sm
line
echo "${w}creating a reciept"
echo "'${lgr}#${w}---------------' 5/100"
sleep .4
clear
banner_sm
line
echo "'${lgr}#####${w}-----------' 37/100"
sleep .4
clear
banner_sm
line
echo "'${lgr}################${w}' 100/100"
sleep .2
clear
invoice
}
store() {
gold=12
iron=6
printf "${w}The value of ${y}Gold${w} is ${lgr}12$ ${w}per gram.\nThe value of ${lg}Iron${w} is ${lgr}6$ ${w}per gram.\n\n"
printf "${lr}NOTE!${w} You can only have 1 kg max\n"
printf "How much ${y}Gold${w} are you buying(in grams)?: "
read agold
if [ $agold -gt 1000 ];
then
w_mass
sleep 2
clear
banner
line
store
exit
fi
#Line 86
printf "How much ${lg}Iron${w} are you buying(in grams): "
read airon
if [ $airon -gt 1000 ];
then
w_mass
sleep 2
clear
banner
line
store
exit
fi
tgold=$(( $gold * $agold ))
tiron=$(( $iron * $airon ))
total=$(( $tgold + $tiron ))
printf "\nYour total bill is ${lgr}${total}$\n"
line
read -p "${w}Do you want to print the reciept? ${y}"
case $REPLY in
y | ok | sure | yes)
clear; invd;;
n | no | nope | nah)
exit 0;;
*)
{ w1; sleep 1; re; };;
esac
}
#Line 113
#printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
main_menu() {
line
echo
echo
printf "${y}where do you want to go?$w"
printf "\n${lb}Chose one${w}"
printf "\n${g}[${w}a${g}]${w} store"
printf "\n${g}[${w}b${g}]${w} somewhere else\n"
read -p "${lgr}>> ${w}" ch
case $ch in
a)
clear; banner; line; store;;
b)
const;;
*)
w_opt; sleep 2; clear;banner; main_menu;
esac
}
login
